// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`agentDesktopReducer ADD_INTERACTION adding an inbound interaction adds it 1`] = `
Object {
  "interactions": Array [
    Object {
      "activeContactForm": Object {
        "contactForm": Object {},
        "editingContacts": Array [],
        "formErrors": Object {},
        "formIsDirty": false,
        "formIsValid": false,
        "saveLoading": false,
        "selectedIndexes": Object {},
        "showErrors": Object {},
        "unusedFields": Object {},
      },
      "agentRecordingEnabled": undefined,
      "autoAnswer": undefined,
      "channelType": "voice",
      "contact": undefined,
      "contactMode": "search",
      "direction": "inbound",
      "dispositionDetails": Object {
        "categories": Array [],
        "dispositions": Array [],
        "forceSelect": false,
        "selected": Array [],
      },
      "interactionId": "test-interaction-id",
      "muted": false,
      "note": Object {
        "body": "",
        "notesPanelHeight": 300,
        "title": "",
      },
      "query": Object {},
      "sidePanelTabIndex": 0,
      "status": "work-offer",
      "timeout": NaN,
      "warmTransfers": Array [],
      "wrapupDetails": Object {
        "wrapupEnabled": false,
        "wrapupUpdateAllowed": false,
      },
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer ADD_INTERACTION adding an outbound email interaction is ignored 1`] = `
Object {
  "interactions": Array [],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer ADD_INTERACTION adding an outbound sms interaction is ignored 1`] = `
Object {
  "interactions": Array [],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer ADD_INTERACTION adding an outbound voice interaction with new attributes when the interaction is present updates the interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "activeContactForm": Object {
        "contactForm": Object {},
        "editingContacts": Array [],
        "formErrors": Object {},
        "formIsDirty": false,
        "formIsValid": false,
        "saveLoading": false,
        "selectedIndexes": Object {},
        "showErrors": Object {},
        "unusedFields": Object {},
      },
      "agentRecordingEnabled": undefined,
      "autoAnswer": undefined,
      "channelType": "voice",
      "contact": undefined,
      "contactMode": "search",
      "direction": "outbound",
      "dispositionDetails": Object {
        "categories": Array [],
        "dispositions": Array [],
        "forceSelect": false,
        "selected": Array [],
      },
      "interactionId": "test-interaction-id",
      "muted": false,
      "note": Object {
        "body": "",
        "notesPanelHeight": 300,
        "title": "",
      },
      "query": Object {},
      "sidePanelTabIndex": 0,
      "status": "work-offer",
      "timeout": NaN,
      "warmTransfers": Array [],
      "wrapupDetails": Object {
        "wrapupEnabled": false,
        "wrapupUpdateAllowed": false,
      },
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer ADD_MESSAGE Message is added 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "direction": "inbound",
      "interactionId": "test-interaction-id",
      "messageHistory": Array [],
    },
  ],
}
`;

exports[`agentDesktopReducer ADD_MESSAGE ResponseMessage is added 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "direction": "inbound",
      "interactionId": "test-interaction-id",
      "messageHistory": Array [],
    },
  ],
}
`;

exports[`agentDesktopReducer ADD_SCRIPT interaction is not there adds a "script-only" interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
    },
    Object {
      "activeContactForm": Object {
        "contactForm": Object {},
        "editingContacts": Array [],
        "formErrors": Object {},
        "formIsDirty": false,
        "formIsValid": false,
        "saveLoading": false,
        "selectedIndexes": Object {},
        "showErrors": Object {},
        "unusedFields": Object {},
      },
      "contact": Object {},
      "interactionId": "new-interaction-id",
      "isScriptOnly": true,
      "query": Object {},
      "script": Object {
        "scriptItem": "something",
      },
      "sidePanelTabIndex": 0,
      "status": "script-only",
    },
  ],
  "selectedInteractionId": "test-interaction-id",
}
`;

exports[`agentDesktopReducer ADD_SCRIPT interaction is not there no existing/selected interactions adds also selects the interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "activeContactForm": Object {
        "contactForm": Object {},
        "editingContacts": Array [],
        "formErrors": Object {},
        "formIsDirty": false,
        "formIsValid": false,
        "saveLoading": false,
        "selectedIndexes": Object {},
        "showErrors": Object {},
        "unusedFields": Object {},
      },
      "contact": Object {},
      "interactionId": "new-interaction-id",
      "isScriptOnly": true,
      "query": Object {},
      "script": Object {
        "scriptItem": "something",
      },
      "sidePanelTabIndex": 0,
      "status": "script-only",
    },
  ],
  "selectedInteractionId": "new-interaction-id",
}
`;

exports[`agentDesktopReducer ADD_SCRIPT interaction is there interaction is not voice adds the script and sets focus to the script tab 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "messaging",
      "interactionId": "test-interaction-id",
      "script": Object {
        "scriptItem": "something",
      },
      "sidePanelTabIndex": 2,
    },
  ],
  "isContactsPanelCollapsed": false,
}
`;

exports[`agentDesktopReducer ADD_SCRIPT interaction is there interaction is voice adds the script 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "voice",
      "interactionId": "test-interaction-id",
      "script": Object {
        "scriptItem": "something",
      },
    },
  ],
}
`;

exports[`agentDesktopReducer INITIALIZE_OUTBOUND_SMS sets the interactionId, updates the selectedInteractionId, updates the status, and adds the message 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "newInteractionId",
      "messageHistory": Array [
        Object {
          "from": "Agent",
          "text": "new message!",
          "timestamp": "1970-01-01T00:00:00.000Z",
          "type": "agent",
          "unread": false,
        },
      ],
      "status": "initialized-outbound",
    },
  ],
  "selectedInteractionId": "newInteractionId",
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION interaction is not there does nothing 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
    },
  ],
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION interaction with a script sets the status to "work-ended-pending-script" 1`] = `
Object {
  "interactions": Array [
    Object {
      "contactMode": "view",
      "interactionId": "test-interaction-id",
      "script": Object {
        "scriptItem": "something",
      },
      "status": "work-ended-pending-script",
    },
  ],
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION interaction without a script interaction is not the selected interaction keeps the selectedInteractionId the same 1`] = `
Object {
  "interactions": Array [],
  "selectedInteractionId": "other-interaction-id",
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION interaction without a script interaction is the selected interaction only non-voice interactions exist selects the first non-voice interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "interactionId": "first-interaction-id",
    },
    Object {
      "channelType": "email",
      "interactionId": "second-interaction-id",
    },
  ],
  "selectedInteractionId": "first-interaction-id",
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION interaction without a script interaction is the selected interaction voice interaction exists selects the voice interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "interactionId": "sms-interaction-id",
    },
    Object {
      "channelType": "voice",
      "interactionId": "voice-interaction-id",
    },
  ],
  "selectedInteractionId": "voice-interaction-id",
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION_HARD interaction is not there does nothing 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
    },
  ],
}
`;

exports[`agentDesktopReducer REMOVE_INTERACTION_HARD interaction is the selected interaction removes the interaction and selectes the next one 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "interactionId": "first-interaction-id",
    },
    Object {
      "channelType": "email",
      "interactionId": "second-interaction-id",
    },
  ],
  "selectedInteractionId": "first-interaction-id",
}
`;

exports[`agentDesktopReducer REMOVE_SCRIPT interaction is not there does nothing 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
      "script": Object {
        "scriptItem": "something",
      },
    },
  ],
}
`;

exports[`agentDesktopReducer REMOVE_SCRIPT interaction is there removes the script 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
      "script": undefined,
    },
  ],
}
`;

exports[`agentDesktopReducer REMOVE_SCRIPT interaction is there the interaction has status of "work-ended-pending-script" removes the interaction 1`] = `
Object {
  "interactions": Array [],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer SET_ACTIVE_RESOURCES if interaction exists sets the active resources 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "interaction-id",
      "warmTransfers": Array [
        Object {
          "extension": "external-resource",
          "externalResource": true,
          "id": "external-resource-id",
          "name": "external-resource",
          "status": "connected",
          "targetResource": "external-resource-id",
        },
        Object {
          "id": "internal-resource-id",
          "name": "Agent",
          "status": "connected",
          "targetResource": "internal-resource-id",
        },
      ],
    },
    Object {
      "interactionId": "a-different-interaction",
    },
  ],
}
`;

exports[`agentDesktopReducer SET_ACTIVE_RESOURCES if interaction no longer exists does nothing 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "a-different-interaction",
    },
  ],
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if accepting an interaction if interaction is "isScriptOnly" if interaction is not voice deletes "isScriptOnly" and focuses script tab 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "sms",
      "interactionId": "test-interaction-id",
      "script": Object {
        "id": "mock-script-id",
      },
      "sidePanelTabIndex": 2,
      "status": "work-accepting",
    },
  ],
  "isContactsPanelCollapsed": false,
  "selectedInteractionId": "test-interaction-id",
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if accepting an interaction if interaction is "isScriptOnly" if interaction is voice deletes "isScriptOnly" 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "voice",
      "interactionId": "test-interaction-id",
      "script": Object {
        "id": "mock-script-id",
      },
      "status": "work-accepting",
    },
  ],
  "selectedInteractionId": "test-interaction-id",
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if accepting an interaction if no interaction is currently selected selects the interaction 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
      "status": "work-accepting",
    },
  ],
  "selectedInteractionId": "test-interaction-id",
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if interaction is of channelType 'voice' and action contains a response object sets onHold and recording parameters 1`] = `
Object {
  "interactions": Array [
    Object {
      "channelType": "voice",
      "interactionId": "test-interaction-id",
      "onHold": true,
      "recording": false,
      "status": undefined,
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if setting a new status if there are multiple interactions updates the correct interaction's status 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
      "status": "new status",
    },
    Object {
      "interactionId": "other-interaction-id",
      "status": "other-status-id",
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if setting a new status if there the interaction does not exist makes no change 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "other-interaction-id",
      "status": "other-status-id",
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer SET_INTERACTION_STATUS if setting an interaction's status to wrapup if the interaction has wrapupDetails updates the timeout 1`] = `
Object {
  "interactions": Array [
    Object {
      "interactionId": "test-interaction-id",
      "status": "wrapup",
      "timeout": 30000,
      "wrapupDetails": Object {
        "wrapupTime": 30,
      },
    },
  ],
  "selectedInteractionId": undefined,
}
`;

exports[`agentDesktopReducer START_OUTBOUND_INTERACTION adds a new outbound interaction with a generated interactionId, channelType, customer, and contact 1`] = `
Object {
  "interactions": Array [
    Object {
      "activeContactForm": Object {
        "contactForm": Object {},
        "editingContacts": Array [],
        "formErrors": Object {},
        "formIsDirty": false,
        "formIsValid": false,
        "saveLoading": false,
        "selectedIndexes": Object {},
        "showErrors": Object {},
        "unusedFields": Object {},
      },
      "autoAnswer": undefined,
      "channelType": "sms",
      "contact": Object {
        "attributes": Object {
          "email": "jclowater@serenova.com",
          "name": "Josh Clowater",
        },
        "id": "test-contact-id",
      },
      "contactMode": "search",
      "customer": "+15064701234",
      "customerAvatarIndex": 0,
      "direction": "outbound",
      "dispositionDetails": Object {
        "categories": Array [],
        "dispositions": Array [],
        "forceSelect": false,
        "selected": Array [],
      },
      "interactionId": "outbound-sms-+15064701234",
      "messageHistory": Array [],
      "note": Object {
        "body": "",
        "notesPanelHeight": 300,
        "title": "",
      },
      "query": Object {},
      "sidePanelTabIndex": 0,
      "status": "connecting-to-outbound",
      "timeout": NaN,
      "wrapupDetails": Object {
        "wrapupEnabled": false,
        "wrapupUpdateAllowed": false,
      },
    },
  ],
  "selectedInteractionId": "outbound-sms-+15064701234",
}
`;

exports[`agentDesktopReducer UPDATE_RESOURCE_NAME if resource is not present on interactions does nothing 1`] = `
Object {
  "interactions": Array [
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-1",
        },
        Object {
          "id": "resource-id-2",
        },
      ],
    },
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-2",
        },
      ],
    },
  ],
}
`;

exports[`agentDesktopReducer UPDATE_RESOURCE_NAME if resource is present on interactions if resource has name properties sets the name of the resource 1`] = `
Object {
  "interactions": Array [
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-1",
        },
        Object {
          "id": "resource-id-2",
          "name": "Tester Testingson",
        },
      ],
    },
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-2",
          "name": "Tester Testingson",
        },
      ],
    },
  ],
}
`;

exports[`agentDesktopReducer UPDATE_RESOURCE_NAME if resource is present on interactions if resource has no name properties sets the name of the resource to be the resource's email 1`] = `
Object {
  "interactions": Array [
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-1",
        },
        Object {
          "id": "resource-id-2",
          "name": "tester@testingson.com",
        },
      ],
    },
    Object {
      "warmTransfers": Array [
        Object {
          "id": "resource-id-2",
          "name": "tester@testingson.com",
        },
      ],
    },
  ],
}
`;

exports[`agentDesktopReducer returns the correct initial state 1`] = `
Object {
  "activeExtension": Object {},
  "extensions": Array [],
  "interactions": Array [],
  "isContactsPanelCollapsed": true,
  "newInteractionPanel": Object {
    "activeContactForm": Object {
      "contactForm": Object {},
      "editingContacts": Array [],
      "formErrors": Object {},
      "formIsDirty": false,
      "formIsValid": false,
      "saveLoading": false,
      "selectedIndexes": Object {},
      "showErrors": Object {},
      "unusedFields": Object {},
    },
    "contact": Object {},
    "contactMode": "view",
    "interactionId": "creating-new-interaction",
    "query": Object {},
    "sidePanelTabIndex": 0,
    "status": "creating-new-interaction",
    "visible": false,
  },
  "noInteractionContactPanel": Object {
    "activeContactForm": Object {
      "contactForm": Object {},
      "editingContacts": Array [],
      "formErrors": Object {},
      "formIsDirty": false,
      "formIsValid": false,
      "saveLoading": false,
      "selectedIndexes": Object {},
      "showErrors": Object {},
      "unusedFields": Object {},
    },
    "contact": Object {},
    "contactMode": "search",
    "query": Object {},
    "sidePanelTabIndex": 0,
  },
  "presenceReason": Object {},
  "presenceReasonLists": Array [],
  "queues": Array [],
  "refreshRequired": false,
}
`;
