// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`selectAgentDesktopMap should select the agentDesktop domain 1`] = `
Immutable.Map {
  "interactions": Immutable.List [
    "mockInteraction",
  ],
}
`;

exports[`selectInteractionEmails selectQueues Queues should be arranged in alphabetical order in the transfer-list 1`] = `
Array [
  Object {
    "active": true,
    "name": "56",
  },
  Object {
    "active": true,
    "name": "165",
  },
  Object {
    "active": true,
    "name": "AGENT_QUEUE",
  },
  Object {
    "active": true,
    "name": "supervisor",
  },
  Object {
    "active": true,
    "name": "Zoom",
  },
]
`;

exports[`selectInteractionsList should select interactions on the AgentDesktop domain 1`] = `
Immutable.List [
  Immutable.Map {
    "interactionId": "mockId",
  },
]
`;

exports[`selectLoginMap should select the login domain 1`] = `
Immutable.Map {
  "agent": Immutable.Map {
    "userId": "mockId",
  },
}
`;

exports[`transferLists should return interaction transfer lists visible state 1`] = `
Object {
  "mockInterEmailTransferListVisibleState": false,
  "mockInterVocieTransferListVisibleState": true,
}
`;

exports[`transferLists should return non-voice interaction transfer lists 1`] = `
Array [
  Object {
    "endpoints": "mockEmailTransferListEndPoint",
    "id": "mockEmailInteractionTransferListId",
    "name": "mockEmailTransferListName",
  },
]
`;

exports[`transferLists should return non-voice transferLists coming from flow 1`] = `
Array [
  Object {
    "type": "id",
    "value": "mockEmailTransferlistId",
  },
  Object {
    "type": "name",
    "value": "mockEmailTransferlistName",
  },
]
`;

exports[`transferLists should return the voice interaction from the list of interactions 1`] = `
Object {
  "channelType": "voice",
  "interactionId": "mockVoiceInteractionId",
  "transferLists": Object {
    "interactionTransferLists": Array [
      Object {
        "endpoints": "mockVoiceTransferListEndPoint",
        "id": "mockVocieInterTransferListId",
        "name": "mockVocieTransferListName",
      },
    ],
    "loadingState": true,
    "transferListsFromFlow": Array [
      Object {
        "type": "id",
        "value": "mockVocieTransferlistId",
      },
      Object {
        "type": "name",
        "value": "mockVoiceTransferlistName",
      },
    ],
  },
}
`;

exports[`transferLists should return voice interaction transfer lists 1`] = `
Array [
  Object {
    "endpoints": "mockVoiceTransferListEndPoint",
    "id": "mockVocieInterTransferListId",
    "name": "mockVocieTransferListName",
  },
]
`;

exports[`transferLists should return voice transferLists coming from flow 1`] = `
Array [
  Object {
    "type": "id",
    "value": "mockVocieTransferlistId",
  },
  Object {
    "type": "name",
    "value": "mockVoiceTransferlistName",
  },
]
`;
