// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`goEditContact Saga when action.contact is defined should init form with contact values 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contactForm": Object {
          "attribute1": "contact attribute 1",
          "attribute2": "contact attribute 2",
        },
        "formErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "interactionId": "mockInteractionId",
        "selectedIndexes": undefined,
        "showErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "type": "app/ContactsControl/INIT_FORM",
        "unusedFields": undefined,
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is defined should set contact mode to "edit" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mockInteractionId",
        "newMode": "edit",
        "type": "app/AgentDesktop/SET_CONTACT_MODE",
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is defined should set default values (or blank strings) for attributes created after contact is created 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contactForm": Object {
          "attribute1": "contact attribute 1",
          "attribute2": "contact attribute 2",
          "attribute3": "A new value",
          "attribute4": "",
        },
        "formErrors": Object {
          "attribute1": false,
          "attribute2": false,
          "attribute3": false,
          "attribute4": false,
        },
        "interactionId": "mockInteractionId",
        "selectedIndexes": undefined,
        "showErrors": Object {
          "attribute1": false,
          "attribute2": false,
          "attribute3": false,
          "attribute4": false,
        },
        "type": "app/ContactsControl/INIT_FORM",
        "unusedFields": undefined,
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is defined should set editing contacts to provided contact in array 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contacts": Array [
          Object {
            "attributes": Object {
              "attribute1": "contact attribute 1",
              "attribute2": "contact attribute 2",
            },
          },
        ],
        "interactionId": "mockInteractionId",
        "type": "app/ContactsControl/SET_EDITING_CONTACTS",
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is undefined should init form with default values 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contactForm": Object {
          "attribute1": "attribute",
          "attribute2": "",
        },
        "formErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "interactionId": "mockInteractionId",
        "selectedIndexes": undefined,
        "showErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "type": "app/ContactsControl/INIT_FORM",
        "unusedFields": undefined,
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is undefined should set contact mode to "create" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mockInteractionId",
        "newMode": "create",
        "type": "app/AgentDesktop/SET_CONTACT_MODE",
      },
      "channel": null,
    },
  },
}
`;

exports[`goEditContact Saga when action.contact is undefined should set editing contacts to an empty object in an array 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contacts": Array [
          Object {},
        ],
        "interactionId": "mockInteractionId",
        "type": "app/ContactsControl/SET_EDITING_CONTACTS",
      },
      "channel": null,
    },
  },
}
`;

exports[`goMergeContacts saga should init form with contact values and selected indexes 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contactForm": Object {
          "attribute1": "contact 1",
          "attribute2": "",
        },
        "formErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "interactionId": "mockInteractionId",
        "selectedIndexes": Object {
          "attribute1": 0,
        },
        "showErrors": Object {
          "attribute1": false,
          "attribute2": false,
        },
        "type": "app/ContactsControl/INIT_FORM",
        "unusedFields": Object {
          "attribute1": "contact 2",
        },
      },
      "channel": null,
    },
  },
}
`;

exports[`goMergeContacts saga should set contact mode to "merge" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mockInteractionId",
        "newMode": "merge",
        "type": "app/AgentDesktop/SET_CONTACT_MODE",
      },
      "channel": null,
    },
  },
}
`;

exports[`goMergeContacts saga should set default values (or blank strings) for attributes created after contact is created 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contactForm": Object {
          "attribute1": "contact 1",
          "attribute2": "",
          "attribute3": "A new value",
          "attribute4": "",
        },
        "formErrors": Object {
          "attribute1": false,
          "attribute2": false,
          "attribute3": false,
          "attribute4": false,
        },
        "interactionId": "mockInteractionId",
        "selectedIndexes": Object {
          "attribute1": 0,
        },
        "showErrors": Object {
          "attribute1": false,
          "attribute2": false,
          "attribute3": false,
          "attribute4": false,
        },
        "type": "app/ContactsControl/INIT_FORM",
        "unusedFields": Object {
          "attribute1": "contact 2",
        },
      },
      "channel": null,
    },
  },
}
`;

exports[`goMergeContacts saga should set editing contacts to checked contacts in array 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "contacts": Array [
          Object {
            "attributes": Object {
              "attribute1": "contact 1",
              "attribute2": "",
            },
            "id": "contactId1",
          },
          Object {
            "attributes": Object {
              "attribute1": "contact 2",
              "attribute2": "",
            },
            "id": "contactId2",
          },
        ],
        "interactionId": "mockInteractionId",
        "type": "app/ContactsControl/SET_EDITING_CONTACTS",
      },
      "channel": null,
    },
  },
}
`;

exports[`goMergeContacts saga should set form validity to true 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "formIsValid": true,
        "interactionId": "mockInteractionId",
        "type": "app/ContactsControl/SET_FORM_VALIDITY",
      },
      "channel": null,
    },
  },
}
`;
