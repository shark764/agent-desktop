// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MessagingTextArea /> should render correctly under connecting-to-outbound 1`] = `
<div
  style={
    Object {
      "display": "inline-flex",
    }
  }
>
  <style>
    #messageTextarea:focus { outline: none; border-top: 1px solid #23CEF5 !important; border-bottom: 1px solid #23CEF5 !important; border-left: 1px solid #23CEF5 !important;}
  </style>
  <TextareaAutosize
    autoFocus={true}
    id="messageTextarea"
    inputRef={[Function]}
    maxRows={4}
    minRows={2}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    style={
      Object {
        "borderBottom": "1px solid #979797",
        "borderLeft": "1px solid #979797",
        "borderRadius": "3px 0 0 3px",
        "borderRight": "none",
        "borderTop": "1px solid #979797",
        "flex": 1,
        "padding": "4px",
        "resize": "none",
      }
    }
    useCacheForDOMMeasurements={false}
    value=""
  />
  <InjectIntl(Button)
    id="sendMessageButton"
    onClick={[Function]}
    style={
      Array [
        Object {
          "borderRadius": "0 3px 3px 0",
          "fontSize": "11px",
          "padding": 0,
          "verticalAlign": "top",
          "width": "50px",
        },
        Object {
          "height": 50,
        },
      ]
    }
    text={
      Object {
        "defaultMessage": "Send",
        "id": "app.containers.MessagingContentArea.send",
      }
    }
    type="secondary"
  />
</div>
`;

exports[`<MessagingTextArea /> should render correctly under initialized-outbound 1`] = `
<div
  style={
    Object {
      "display": "inline-flex",
    }
  }
>
  <style>
    #messageTextarea:focus { outline: none; border-top: 1px solid #23CEF5 !important; border-bottom: 1px solid #23CEF5 !important; border-left: 1px solid #23CEF5 !important;}
  </style>
  <TextareaAutosize
    autoFocus={true}
    id="messageTextarea"
    inputRef={[Function]}
    maxRows={4}
    minRows={2}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    style={
      Object {
        "borderBottom": "1px solid #979797",
        "borderLeft": "1px solid #979797",
        "borderRadius": "3px 0 0 3px",
        "borderRight": "none",
        "borderTop": "1px solid #979797",
        "flex": 1,
        "padding": "4px",
        "resize": "none",
      }
    }
    useCacheForDOMMeasurements={false}
    value=""
  />
  <InjectIntl(Button)
    id="sendMessageButton"
    onClick={[Function]}
    style={
      Array [
        Object {
          "borderRadius": "0 3px 3px 0",
          "fontSize": "11px",
          "padding": 0,
          "verticalAlign": "top",
          "width": "50px",
        },
        Object {
          "height": 50,
        },
      ]
    }
    text={
      Object {
        "defaultMessage": "Send",
        "id": "app.containers.MessagingContentArea.send",
      }
    }
    type="secondary"
  />
</div>
`;

exports[`<MessagingTextArea /> should render correctly under work-accepted 1`] = `
<div
  style={
    Object {
      "display": "inline-flex",
    }
  }
>
  <style>
    #messageTextarea:focus { outline: none; border-top: 1px solid #23CEF5 !important; border-bottom: 1px solid #23CEF5 !important; border-left: 1px solid #23CEF5 !important;}
  </style>
  <TextareaAutosize
    autoFocus={true}
    id="messageTextarea"
    inputRef={[Function]}
    maxRows={4}
    minRows={2}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    style={
      Object {
        "borderBottom": "1px solid #979797",
        "borderLeft": "1px solid #979797",
        "borderRadius": "3px 0 0 3px",
        "borderRight": "none",
        "borderTop": "1px solid #979797",
        "flex": 1,
        "padding": "4px",
        "resize": "none",
      }
    }
    useCacheForDOMMeasurements={false}
    value=""
  />
  <InjectIntl(Button)
    id="sendMessageButton"
    onClick={[Function]}
    style={
      Array [
        Object {
          "borderRadius": "0 3px 3px 0",
          "fontSize": "11px",
          "padding": 0,
          "verticalAlign": "top",
          "width": "50px",
        },
        Object {
          "height": 50,
        },
      ]
    }
    text={
      Object {
        "defaultMessage": "Send",
        "id": "app.containers.MessagingContentArea.send",
      }
    }
    type="secondary"
  />
</div>
`;

exports[`<MessagingTextArea /> should render correctly with message templates 1`] = `
<div
  style={
    Object {
      "display": "inline-flex",
    }
  }
>
  <InjectIntl(Button)
    id="templateMenuButton"
    onClick={[Function]}
    style={
      Array [
        Object {
          "borderRadius": "3px 0 0 3px",
          "fontSize": "24px",
          "padding": 0,
          "verticalAlign": "top",
          "width": "40px",
        },
        Object {
          "height": 50,
        },
      ]
    }
    type="secondary"
  >
    +
  </InjectIntl(Button)>
  <style>
    #messageTextarea:focus { outline: none; border-top: 1px solid #23CEF5 !important; border-bottom: 1px solid #23CEF5 !important; border-left: 0;}
  </style>
  <TextareaAutosize
    autoFocus={true}
    id="messageTextarea"
    inputRef={[Function]}
    maxRows={4}
    minRows={2}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    style={
      Object {
        "borderBottom": "1px solid #979797",
        "borderLeft": "none",
        "borderRadius": "0",
        "borderRight": "none",
        "borderTop": "1px solid #979797",
        "flex": 1,
        "padding": "4px",
        "resize": "none",
      }
    }
    useCacheForDOMMeasurements={false}
    value=""
  />
  <InjectIntl(Button)
    id="sendMessageButton"
    onClick={[Function]}
    style={
      Array [
        Object {
          "borderRadius": "0 3px 3px 0",
          "fontSize": "11px",
          "padding": 0,
          "verticalAlign": "top",
          "width": "50px",
        },
        Object {
          "height": 50,
        },
      ]
    }
    text={
      Object {
        "defaultMessage": "Send",
        "id": "app.containers.MessagingContentArea.send",
      }
    }
    type="secondary"
  />
</div>
`;
