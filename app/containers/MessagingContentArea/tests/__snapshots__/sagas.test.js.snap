// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`copyChatTranscript Chat Transcript is copied succesfully passes in the correct transcript is generated and passed to copyToClipboard 1`] = `
Array [
  Array [
    "Customer: Customer
Current Agent: Agent Smith 
Other Agent: agentId
Channel: messaging
Date: 3/5/2020, 9:39:59 AM
---------------------- Chat Transcript ----------------------
9:39:59 AM - agentId: sampleText1
9:39:59 AM - Customer: sampleText2
9:39:59 AM - agentId: airplane.png
9:39:59 AM - Customer: frymire.png
",
  ],
]
`;

exports[`copyChatTranscript Chat Transcript is copied succesfully selects the agent 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`copyChatTranscript Chat Transcript is copied succesfully state is change to not copied 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "isCopied": false,
        "type": "app/AgentDesktop/TOGGLE_TRANSCRIPT_COPIED",
      },
      "channel": null,
    },
  },
}
`;

exports[`copyChatTranscript Chat Transcript is copied succesfully transcript is copied 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "isCopied": true,
        "type": "app/AgentDesktop/TOGGLE_TRANSCRIPT_COPIED",
      },
      "channel": null,
    },
  },
}
`;

exports[`copyChatTranscript Chat Transcript is copied succesfully wait five seconds to change state 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        5000,
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`copyChatTranscript Chat Transcript isn't copied selects the agent 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`copyChatTranscript Chat Transcript isn't copied transcript fails to be copied 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "AD-1007",
        },
        "interactionFatal": undefined,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should call the promise util with the SDK assignContact and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.assignContact",
        Object {
          "contactId": "contact1",
          "interactionId": "newInteractionId",
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should call the promise util with the SDK initializeOutboundSms and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.messaging.initializeOutboundSms",
        Object {
          "flowId": "hg",
          "message": "message",
          "outboundAni": "+45",
          "outboundIdentifierId": undefined,
          "outboundIdentifierListId": undefined,
          "phoneNumber": "phoneNumber",
          "popUri": undefined,
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should dispacth addContactNotification action to set messageType to "assigned" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "notificationInfo": Object {
          "messageType": "assigned",
        },
        "type": "app/ContactsControl/ADD_CONTACT_NOTIFICATION",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should dispatch a setInteractionStatus action to set to "initializing-outbound" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "newStatus": "initializing-outbound",
        "response": undefined,
        "type": "app/AgentDesktop/SET_INTERACTION_STATUS",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should dispatch setContactMode action to set to view 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "newInteractionId",
        "newMode": "view",
        "type": "app/AgentDesktop/SET_CONTACT_MODE",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should get the selected outbound identifier 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed and an outbound ANI is selected should use the yielded SDK results to dispatch an initializeOutboundSms action with the correct args 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "newInteractionId",
        "message": "message",
        "placeholderInteractionId": "interactionId",
        "type": "app/AgentDesktop/INITIALIZE_OUTBOUND_SMS_FOR_AGENT_DESKTOP",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should call the promise util with the SDK assignContact and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.assignContact",
        Object {
          "contactId": "contact1",
          "interactionId": "newInteractionId",
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should call the promise util with the SDK initializeOutboundSms and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.messaging.initializeOutboundSms",
        Object {
          "message": "message",
          "phoneNumber": "phoneNumber",
          "popUri": undefined,
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should dispacth addContactNotification action to set messageType to "assigned" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "notificationInfo": Object {
          "messageType": "assigned",
        },
        "type": "app/ContactsControl/ADD_CONTACT_NOTIFICATION",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should dispatch a setInteractionStatus action to set to "initializing-outbound" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "newStatus": "initializing-outbound",
        "response": undefined,
        "type": "app/AgentDesktop/SET_INTERACTION_STATUS",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should dispatch setContactMode action to set to view 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "newInteractionId",
        "newMode": "view",
        "type": "app/AgentDesktop/SET_CONTACT_MODE",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should get the selected outbound identifier 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga When contactId is passed but there's no outbound ANI selected should use the yielded SDK results to dispatch an initializeOutboundSms action with the correct args 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "newInteractionId",
        "message": "message",
        "placeholderInteractionId": "interactionId",
        "type": "app/AgentDesktop/INITIALIZE_OUTBOUND_SMS_FOR_AGENT_DESKTOP",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga if contactId is not passed but there's an outbound ANI selected should call the promise util with the SDK initializeOutboundSms and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.messaging.initializeOutboundSms",
        Object {
          "flowId": "hg",
          "message": "message",
          "outboundAni": "+45",
          "outboundIdentifierId": undefined,
          "outboundIdentifierListId": undefined,
          "phoneNumber": "phoneNumber",
          "popUri": undefined,
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga if contactId is not passed but there's an outbound ANI selected should dispatch a setInteractionStatus action to set to "initializing-outbound" 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "newStatus": "initializing-outbound",
        "response": undefined,
        "type": "app/AgentDesktop/SET_INTERACTION_STATUS",
      },
      "channel": null,
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga if contactId is not passed but there's an outbound ANI selected should get the selected outbound identifier 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`initializeOutboundSmsForMessagingSaga if contactId is not passed but there's an outbound ANI selected should use the yielded SDK results to dispatch an initializeOutboundSms action with the correct args 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "newInteractionId",
        "message": "message",
        "placeholderInteractionId": "interactionId",
        "type": "app/AgentDesktop/INITIALIZE_OUTBOUND_SMS_FOR_AGENT_DESKTOP",
      },
      "channel": null,
    },
  },
}
`;

exports[`sendOutboundSms should call the promise util with the SDK sendOutboundSms and the correct arguments 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "CALL": Object {
      "args": Array [
        "CxEngage.interactions.messaging.sendOutboundSms",
        Object {
          "interactionId": "interactionId",
          "message": "message",
        },
        "MessagingContentArea",
      ],
      "context": null,
      "fn": [Function],
    },
  },
}
`;

exports[`sendOutboundSms should use the yielded SDK results to dispatch a sendOutboundSms action with the correct args 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "interactionId",
        "message": Immutable.Record {
          "id": "no-id",
          "type": "agent",
          "from": "Agent",
          "text": "message",
          "timestamp": "1970-01-01T00:00:00.000Z",
        },
        "type": "app/AgentDesktop/ADD_MESSAGE",
      },
      "channel": null,
    },
  },
}
`;
