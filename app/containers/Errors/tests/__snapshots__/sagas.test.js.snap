// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`handleError Saga error level errors should call setNonCriticalError 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "level": "error",
        },
        "interactionFatal": undefined,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is not there should be done 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is not there should call select the interactions list to see if we have the interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is there should be done 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is there should call removeInteractionHard 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mock-interaction-id",
        "type": "app/AgentDesktop/REMOVE_INTERACTION_HARD",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is there should call select the interactions list to see if we have the interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`handleError Saga interaction fatal level errors and interaction is there should set a non critical error with interactionFatal flag 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "data": Object {
            "interactionId": "mock-interaction-id",
          },
          "level": "interaction-fatal",
        },
        "interactionFatal": true,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga other level errors are ignored 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga outbound email interaction fails to connect should be done 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga outbound email interaction fails to connect should call setNonCriticalError with the fatal flag 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "level": "error",
        },
        "interactionFatal": true,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga outbound email interaction fails to connect should try to remove nonexisting interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": undefined,
        "type": "app/AgentDesktop/REMOVE_INTERACTION_HARD",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga outbound sms interaction fails to connect should be done 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga outbound sms interaction fails to connect should remove failed sms interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "test-interaction-id",
        "type": "app/AgentDesktop/REMOVE_INTERACTION_HARD",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga outbound sms interaction fails to connect should select the failed sms interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`handleError Saga outbound sms interaction fails to connect should setNonCriticalError 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "level": "error",
        },
        "interactionFatal": true,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga outbound voice interaction fails to connect should be done 1`] = `
Object {
  "done": true,
  "value": undefined,
}
`;

exports[`handleError Saga outbound voice interaction fails to connect should remove failed voice interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "test-interaction-id",
        "type": "app/AgentDesktop/REMOVE_INTERACTION_HARD",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga outbound voice interaction fails to connect should select the failed voice interaction 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "SELECT": Object {
      "args": Array [],
      "selector": [Function],
    },
  },
}
`;

exports[`handleError Saga outbound voice interaction fails to connect should setNonCriticalError 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "level": "error",
        },
        "interactionFatal": true,
        "type": "app/Errors/SET_NON_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga session fatal level errors should call setCriticalError 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "error": Object {
          "code": "mockErrorCode",
          "level": "session-fatal",
        },
        "type": "app/Errors/SET_CRITICAL_ERROR",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga voice interaction failed to hold/resume from hold customer should call setInteractionError 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mock-interaction-id",
        "notification": Object {
          "code": "mockErrorCode",
          "data": Object {
            "interactionId": "mock-interaction-id",
          },
          "isDismissible": true,
          "isError": true,
          "level": "interaction-error",
          "uuid": "mock-uuid",
        },
        "type": "app/AgentDesktop/TOGGLE_INTERACTION_NOTIFICATION",
      },
      "channel": null,
    },
  },
}
`;

exports[`handleError Saga voice interaction failed to hold/resume from hold customer should send toggleInteractionIsHolding to the store 1`] = `
Object {
  "done": false,
  "value": Object {
    "@@redux-saga/IO": true,
    "PUT": Object {
      "action": Object {
        "interactionId": "mock-interaction-id",
        "isHolding": false,
        "type": "app/AgentDesktop/TOGGLE_IS_HOLDING",
      },
      "channel": null,
    },
  },
}
`;
