// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VoiceContentArea /> should render correctly 1`] = `
<Connect(ErrorBoundaryComponent)
  buttonConfig={
    Array [
      Object {
        "disabled": false,
        "id": "hang-up-button",
        "onClick": [Function],
        "text": Object {
          "defaultMessage": "Hang Up",
          "id": "app.containers.VoiceContentArea.hangUp",
        },
        "tooltipText": Object {},
        "type": "primaryRed",
      },
    ]
  }
  content={
    <div
      style={
        Array [
          Object {
            "height": "100%",
            "overflowY": "auto",
            "padding": "17px",
            "position": "absolute",
            "width": "100%",
          },
          false,
        ]
      }
    >
      <Connect(ErrorBoundaryComponent) />
    </div>
  }
  details={<Connect(ErrorBoundaryComponent) />}
  from="Contact name"
  interaction={
    Object {
      "channelType": "work-item",
      "contact": Object {
        "attributes": Object {
          "name": "Contact name",
        },
      },
      "customFields": Array [
        Object {
          "label": "label",
          "value": "value",
        },
      ],
      "interactionId": "mock-interaction-1",
      "script": Object {
        "something": "something",
      },
      "status": "work-accepted",
      "subject": "Test subject",
    }
  }
/>
`;

exports[`<VoiceContentArea /> should render correctly when waiting on script 1`] = `
<Connect(ErrorBoundaryComponent)
  buttonConfig={
    Array [
      Object {
        "disabled": true,
        "id": "hang-up-button",
        "onClick": [Function],
        "text": Object {
          "defaultMessage": "Hang Up",
          "id": "app.containers.VoiceContentArea.hangUp",
        },
        "tooltipText": Object {
          "defaultMessage": "test message",
          "id": "testId",
        },
        "type": "primaryRed",
      },
    ]
  }
  content={
    <div
      style={
        Array [
          Object {
            "height": "100%",
            "overflowY": "auto",
            "padding": "17px",
            "position": "absolute",
            "width": "100%",
          },
          Object {
            "border": "1px solid #FE4565",
          },
        ]
      }
    >
      <Connect(ErrorBoundaryComponent) />
    </div>
  }
  details={<Connect(ErrorBoundaryComponent) />}
  from="Contact name"
  interaction={
    Object {
      "channelType": "work-item",
      "contact": Object {
        "attributes": Object {
          "name": "Contact name",
        },
      },
      "customFields": Array [
        Object {
          "label": "label",
          "value": "value",
        },
      ],
      "interactionId": "mock-interaction-1",
      "script": Object {
        "something": "something",
      },
      "status": "work-accepted",
      "subject": "Test subject",
    }
  }
/>
`;
