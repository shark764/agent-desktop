// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MenuDialogLink /> when A is clicked on should render correctly 1`] = `
<div
  style={
    Object {
      "position": "relative",
    }
  }
>
  <A
    disabled={false}
    id="mockId"
    onClick={[Function]}
    text="test link text"
  />
  <div
    style={
      Object {
        "bottom": "20px",
        "left": "-55px",
        "position": "absolute",
        "width": 0,
      }
    }
  >
    <PopupDialog
      arrowLeftOffsetPx={60.5}
      fadeContent={true}
      hide={[Function]}
      isVisible={true}
      style={
        Array [
          Object {
            "borderRadius": "none",
          },
          Object {
            "left": -0,
          },
        ]
      }
      widthPx={135}
    >
      <div>
        mock element
      </div>
      <div
        style={
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
          }
        }
      >
        <InjectIntl(Button)
          id="menuOption-0"
          key="menuOption-0"
          onClick={[Function]}
          style={
            Array [
              Object {
                "borderBottom": "none",
                "borderLeft": "none",
                "borderRight": "none",
                "borderTop": "none",
              },
              Object {
                "width": "100%",
              },
              Object {},
            ]
          }
          text={
            Object {
              "defaultMessage": "Testing",
              "id": "app.mockId",
            }
          }
          type="secondary"
        />
      </div>
    </PopupDialog>
  </div>
</div>
`;

exports[`<MenuDialogLink /> when dialog not active should render correctly 1`] = `
<div
  style={
    Object {
      "position": "relative",
    }
  }
>
  <A
    disabled={false}
    id="mockId"
    onClick={[Function]}
    text="test link text"
  />
  <div
    style={
      Object {
        "bottom": "20px",
        "left": "-55px",
        "position": "absolute",
        "width": 0,
      }
    }
  >
    <PopupDialog
      arrowLeftOffsetPx={60.5}
      fadeContent={true}
      hide={[Function]}
      isVisible={false}
      style={
        Array [
          Object {
            "borderRadius": "none",
          },
          Object {
            "left": -0,
          },
        ]
      }
      widthPx={135}
    >
      <div>
        mock element
      </div>
      <div
        style={
          Object {
            "alignItems": "stretch",
            "display": "flex",
            "flexDirection": "row",
          }
        }
      >
        <InjectIntl(Button)
          id="menuOption-0"
          key="menuOption-0"
          onClick={[Function]}
          style={
            Array [
              Object {
                "borderBottom": "none",
                "borderLeft": "none",
                "borderRight": "none",
                "borderTop": "none",
              },
              Object {
                "width": "100%",
              },
              Object {},
            ]
          }
          text={
            Object {
              "defaultMessage": "Testing",
              "id": "app.mockId",
            }
          }
          type="secondary"
        />
      </div>
    </PopupDialog>
  </div>
</div>
`;
