// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Stat /> should render correctly 1`] = `
<div
  className="stat-box"
  data-radium={true}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  style={
    Object {
      "height": "54px",
      "maxWidth": "104px",
      "minWidth": "104px",
      "paddingTop": "13px",
      "position": "relative",
      "width": "104px",
    }
  }
>
  <div
    className="stat-value"
    data-radium={true}
    key=".2"
    style={
      Object {
        "color": "#FFFFFF",
        "fontSize": "16px",
        "fontWeight": "bold",
        "height": "19px",
        "lineHeight": "19px",
        "textAlign": "center",
      }
    }
  >
    <div
      data-radium={true}
      id="loadingContainer"
      style={
        Object {
          "display": "inline-block",
          "height": "15px",
          "position": "relative",
          "top": "-5px",
          "width": "15px",
        }
      }
    >
      <IconSVG
        id="loadingIcon"
        name="loadingWhite"
      />
    </div>
  </div>
  <div
    className="agent-stat"
    data-radium={true}
    key=".3"
    style={
      Object {
        "color": "#FFFFFF",
        "fontSize": "12px",
        "fontWeight": "600",
        "height": "10px",
        "lineHeight": "10px",
        "overflow": "hidden",
        "padding": "0 4px",
        "textAlign": "center",
        "textOverflow": "ellipsis",
        "whiteSpace": "nowrap",
        "width": "100%",
      }
    }
  >
    mockName
  </div>
</div>
`;

exports[`<Stat /> should show hover details on mouse over 1`] = `
<div
  className="stat-box"
  data-radium={true}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onMouseOver={[Function]}
  style={
    Object {
      "boxShadow": "inset 0 0 6px 1px rgba(0,0,0,0.34)",
      "height": "54px",
      "maxWidth": "104px",
      "minWidth": "104px",
      "paddingTop": "13px",
      "position": "relative",
      "width": "104px",
    }
  }
>
  <div
    data-radium={true}
    key=".0"
    style={
      Object {
        "bottom": "60px",
        "position": "absolute",
        "zIndex": 2,
      }
    }
  >
    <div
      data-radium={true}
      key=".0"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": "8px",
          "bottom": "-9px",
          "boxShadow": "0 0 6px 1px rgba(0,0,0,0.29)",
          "left": "3px",
          "overflowWrap": "break-word",
          "padding": "10px 13px",
          "position": "relative",
          "width": "130px",
          "wordWrap": "break-word",
          "zIndex": "2",
        }
      }
    >
      <div
        data-radium={true}
        key=".0"
        style={
          Object {
            "color": "#979797",
            "fontSize": "14px",
            "lineHeight": "20px",
          }
        }
      >
        <FormattedMessage
          defaultMessage="Source"
          id="app.components.Stat.source"
          key=".0"
          values={Object {}}
        />
        :
      </div>
      <div
        key=".1"
      >
        <FormattedMessage
          defaultMessage="Agent"
          id="app.components.Stat.resource-id"
          values={Object {}}
        />
      </div>
      <div
        data-radium={true}
        key=".2"
        style={
          Object {
            "color": "#979797",
            "fontSize": "14px",
            "lineHeight": "20px",
          }
        }
      >
        <FormattedMessage
          defaultMessage="Statistic"
          id="app.components.Stat.statistic"
          key=".0"
          values={Object {}}
        />
        :
      </div>
      <div
        key=".3"
      >
        mockName
      </div>
      <div
        data-radium={true}
        key=".4"
        style={
          Object {
            "color": "#979797",
            "fontSize": "14px",
            "lineHeight": "20px",
          }
        }
      >
        <FormattedMessage
          defaultMessage="Aggregate"
          id="app.components.Stat.aggregate"
          key=".0"
          values={Object {}}
        />
        :
      </div>
      <div
        key=".5"
      >
        <FormattedMessage
          values={Object {}}
        />
      </div>
    </div>
    <div
      data-radium={true}
      key=".1"
      style={
        Object {
          "borderColor": "#FFF transparent transparent #FFF",
          "borderImage": "initial",
          "borderRadius": "3px",
          "borderStyle": "solid",
          "borderWidth": "8px",
          "boxShadow": "-6px -6px 6px -4px rgba(0,0,0,0.29)",
          "height": "0px",
          "left": "44px",
          "position": "relative",
          "transform": "rotate(-134deg)",
          "width": "0px",
          "zIndex": "2",
        }
      }
    />
  </div>
  <span
    data-radium={true}
    key=".$1"
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "color": "#FFFFFF",
        "cursor": "pointer",
        "fontSize": "12px",
        "position": "absolute",
        "right": "10px",
        "top": "6px",
        "zIndex": "2",
      }
    }
  >
    <IconSVG
      id="closeStatIcon"
      name="close"
      width="10px"
    />
  </span>
  <div
    className="stat-value"
    data-radium={true}
    key=".2"
    style={
      Object {
        "color": "#FFFFFF",
        "fontSize": "16px",
        "fontWeight": "bold",
        "height": "19px",
        "lineHeight": "19px",
        "textAlign": "center",
      }
    }
  >
    <div
      data-radium={true}
      id="loadingContainer"
      style={
        Object {
          "display": "inline-block",
          "height": "15px",
          "position": "relative",
          "top": "-5px",
          "width": "15px",
        }
      }
    >
      <IconSVG
        id="loadingIcon"
        name="loadingWhite"
      />
    </div>
  </div>
  <div
    className="agent-stat"
    data-radium={true}
    key=".3"
    style={
      Object {
        "color": "#FFFFFF",
        "fontSize": "12px",
        "fontWeight": "600",
        "height": "10px",
        "lineHeight": "10px",
        "overflow": "hidden",
        "padding": "0 4px",
        "textAlign": "center",
        "textOverflow": "ellipsis",
        "whiteSpace": "nowrap",
        "width": "100%",
      }
    }
  >
    mockName
  </div>
</div>
`;
