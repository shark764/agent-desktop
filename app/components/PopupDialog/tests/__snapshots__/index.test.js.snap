// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PopupDialog /> when given required props and arrowLeftOffsetPx should render correctly 1`] = `
<div
  data-radium={true}
>
  <div
    data-radium={true}
    id="screen-mask"
    key=".0"
    onClick={[Function]}
    style={
      Object {
        "height": "100vh",
        "left": "0px",
        "position": "fixed",
        "top": "0px",
        "width": "100vw",
        "zIndex": "2",
      }
    }
  />
  <VelocityTransitionGroup
    enter={
      Object {
        "animation": "transition.slideUpIn",
        "duration": "100",
      }
    }
    enterHideStyle={
      Object {
        "display": "none",
      }
    }
    enterShowStyle={
      Object {
        "display": "",
      }
    }
    key=".1"
    leave={
      Object {
        "animation": "transition.slideUpOut",
        "duration": "100",
      }
    }
    runOnMount={false}
  >
    <div
      data-radium={true}
      id="mockId"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": "8px",
          "boxShadow": "0 0 6px 1px rgba(0,0,0,0.29)",
          "color": "#4b4b4b",
          "margin": "10px",
          "position": "relative",
          "width": "1px",
          "zIndex": 3,
        }
      }
    >
      <span
        data-radium={true}
        key=".0"
        style={
          Object {
            "borderColor": "#FFF transparent transparent #FFF",
            "borderImage": "initial",
            "borderRadius": "3px",
            "borderStyle": "solid",
            "borderWidth": "8px",
            "bottom": "-7px",
            "boxShadow": "-6px -6px 11px -4px rgba(0,0,0,0.29)",
            "height": "0px",
            "left": "5px",
            "position": "absolute",
            "transform": "rotate(-134deg)",
            "width": "0px",
            "zIndex": "1",
          }
        }
      />
      <p
        key=".1"
      >
        Mock Child
      </p>
    </div>
  </VelocityTransitionGroup>
</div>
`;

exports[`<PopupDialog /> when given required props should render correctly 1`] = `
<div
  data-radium={true}
>
  <div
    data-radium={true}
    id="screen-mask"
    key=".0"
    onClick={[Function]}
    style={
      Object {
        "height": "100vh",
        "left": "0px",
        "position": "fixed",
        "top": "0px",
        "width": "100vw",
        "zIndex": "2",
      }
    }
  />
  <VelocityTransitionGroup
    enter={
      Object {
        "animation": "transition.slideUpIn",
        "duration": "100",
      }
    }
    enterHideStyle={
      Object {
        "display": "none",
      }
    }
    enterShowStyle={
      Object {
        "display": "",
      }
    }
    key=".1"
    leave={
      Object {
        "animation": "transition.slideUpOut",
        "duration": "100",
      }
    }
    runOnMount={false}
  >
    <div
      data-radium={true}
      id="mockId"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderRadius": "8px",
          "boxShadow": "0 0 6px 1px rgba(0,0,0,0.29)",
          "color": "#4b4b4b",
          "margin": "10px",
          "position": "relative",
          "width": "1px",
          "zIndex": 3,
        }
      }
    >
      <span
        data-radium={true}
        key=".0"
        style={
          Object {
            "borderColor": "#FFF transparent transparent #FFF",
            "borderImage": "initial",
            "borderRadius": "3px",
            "borderStyle": "solid",
            "borderWidth": "8px",
            "bottom": "-7px",
            "boxShadow": "-6px -6px 11px -4px rgba(0,0,0,0.29)",
            "height": "0px",
            "left": "0px",
            "position": "absolute",
            "transform": "rotate(-134deg)",
            "width": "0px",
            "zIndex": "1",
          }
        }
      />
      <p
        key=".1"
      >
        Mock Child
      </p>
    </div>
  </VelocityTransitionGroup>
</div>
`;
